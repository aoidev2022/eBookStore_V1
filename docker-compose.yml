version: '3.4'

services:
  ebookstore.api.author:
    image: ${DOCKER_REGISTRY-}ebookstore.api.author
    build:
      context: .
      dockerfile: eBookStore.API.Author/Dockerfile
    ports:
      - 5021:80
    restart: on-failure
    networks:
      - eBookStore
      
    depends_on:
      - db

  ebookstore.api.book:
    image: ${DOCKER_REGISTRY-}ebookstore.api.book
    build:
      context: .
      dockerfile: eBookStore.API.Book/Dockerfile
    ports:
      - 5022:80
    restart: on-failure
    networks:
      - eBookStore
    depends_on:
      - db

  ebookstore.api.basket:
    image: ${DOCKER_REGISTRY-}ebookstore.api.basket
    build:
      context: .
      dockerfile: eBookStore.API.Basket/Dockerfile
    ports:
      - 5023:80
    restart: on-failure
    networks:
      - eBookStore
    depends_on:
      - db
      
  ebookstore.api.gateway:
    image: ${DOCKER_REGISTRY-}ebookstore.api.gateway
    build:
      context: .
      dockerfile: eBookStore.API.Gateway/Dockerfile
    depends_on:
    - ebookstore.api.book
    networks:
      - eBookStore
      
  db:
    image: "mcr.microsoft.com/mssql/server:latest"
    volumes:
    - sqlvolume:/var/opt/mssql
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Admin123."
      ACCEPT_EULA: "Y"
    networks:
      - eBookStore

networks:
  eBookStore:
    name: eBookStore
    driver: bridge

volumes:
  sqlvolume:
